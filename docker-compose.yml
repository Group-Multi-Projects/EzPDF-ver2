version: '3.8'

services:
  db:
    image: theodorescsa/mysql-ezpdf:latest
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: dinhthai2004
      MYSQL_DATABASE: ezpdf
      MYSQL_USER: ezpdf_user 
      MYSQL_PASSWORD: ezpdf_password  
      MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password  # Đặt plugin xác thực

    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -pdinhthai2004 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    restart: unless-stopped
      
  web:
    image: theodorescsa/ezpdf-requirements:latest
    container_name: ezpdf_web
    build:
      context: .
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env  # Thêm dòng này để container nhận các biến môi trường từ file .env

    volumes:
      - .:/app
      - ./watch_folder.sh:/usr/local/bin/watch_folder.sh  # Add the watch_folder script

    command: >
      sh -c "
        python3 manage.py makemigrations &&
        python3 manage.py migrate &&
        python3 manage.py shell < create_superuser.py &&
        python3 manage.py runserver 0.0.0.0:8000"

    restart: unless-stopped


  celery:
    image: theodorescsa/ezpdf-requirements:latest
    container_name: celery_worker
    build:
      context: .
    depends_on:
      - db
      - redis
    command: celery -A EzPDF worker --loglevel=info
    env_file:
      - .env  # Thêm dòng này để container nhận các biến môi trường từ file .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - .:/app
  nginx:
    image: nginx:latest
    container_name: ezpdf_nginx
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/logs:/var/log/nginx
    restart: unless-stopped
volumes:
  db_data:

  # frottend:
  #   image: nginx
  #   container_name: frottend
  #   ports:
  #     - "3000:80"  
  #   volumes:
  #     - ./logs/nginx:/var/log/nginx
  #     - ./Front_end/dist:/usr/share/nginx/html:ro  # Mount thư mục dist vào Nginx
  #     # - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro # Mount file cấu hình Nginx (tùy chọn)
  #   restart: unless-stopped




# volumes:
#   db_data:
